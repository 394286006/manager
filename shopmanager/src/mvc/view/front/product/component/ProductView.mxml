<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" horizontalScrollPolicy="off"
		   width="{COL_WIDTH_4}" height="{COL_HEIGHT_4}"  borderStyle="solid"
		   borderColor="#FFFFFF" 
		   verticalScrollPolicy="off" mouseOver="rollOverHandler(event)" 
		   mouseOut="rollOutHandler(event)"  mouseDown="mouseDownHandler(event)"
		   mouseMove="mouseMoveHandler(event)"
		   mouseUp="mouseUpHandler(event)" click="clickHandler(event)">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			
			import mvc.view.front.product.event.ProductDetailEvent;
			import mvc.view.front.product.vo.Product;
			
			import mx.events.DragEvent;
			import mx.controls.Alert;
			public static const COL_WIDTH_4:int = 162;
			public static const COL_HEIGHT_4:int = 122;
			public static const COL_WIDTH_3:int = 217;
			public static const COL_HEIGHT_3:int = 165;
			public static const COL_WIDTH_2:int = 327;
			public static const COL_HEIGHT_2:int = 250;
			public static const COMPARE_WIDTH:int = 162;
			public static const HORIZONTAL_GAP:int = 2;
			public static const VERTICAL_GAP:int = 3;
			
			[Bindable]
			public var product:Product;

			private function rollOverHandler(event:MouseEvent):void
			{
				setStyle("backgroundColor","#ffffff");
				this.alpha=0.9;
				setStyle("borderColor", "#CCCCCC");
				setStyle("dropShadowEnabled", true);
				buttons.visible = true;
			}
			
			private function rollOutHandler(event:MouseEvent):void
			{
//				setStyle("backgroundColor",);
//				this.clearStyle("backgroundColor");
				this.alpha=1;
				setStyle("borderColor", "#FFFFFF");
				setStyle("dropShadowEnabled", false);
				buttons.visible = false;
			}
			public function clickHandler(event:MouseEvent):void
			{
				if (event.target != purchase &&
					event.target != compare &&
					event.target != details)
				{
					dispatchEvent(new ProductDetailEvent(ProductDetailEvent.DETAILS, product));
				}
			}
			
			private var dragStartPoint:Point;
			
			public function mouseDownHandler(event:MouseEvent):void
			{
			
				if (event.target != purchase &&
					event.target != compare &&
					event.target != details)
				{
					dragStartPoint = new Point(event.stageX, event.stageY);
					dragStartPoint = globalToLocal(dragStartPoint);
//					Alert.show("dragstart");
				}
			}
			
			public function mouseMoveHandler(event:MouseEvent):void
			{
				if (dragStartPoint != null)
				{
					var dragEvent:DragEvent = new DragEvent(DragEvent.DRAG_START, true);
					dragEvent.localX = dragStartPoint.x;
					dragEvent.localY = dragStartPoint.y;
					dragEvent.buttonDown = true;
					dispatchEvent(dragEvent);
					
					rollOutHandler(event);
					
					dragStartPoint = null;
				}
			}
			
			public function mouseUpHandler(event:MouseEvent):void
			{
				if (dragStartPoint != null)
				{
					dragStartPoint = null;
				}
			}

		]]>
	</fx:Script>
<mx:VBox width="100%" height="100%">
	

	<s:Label text="{product.name}"/>
	<mx:HBox horizontalGap="0">
		<mx:VBox>
			<mx:Image source="{product.imglevel1[0]}" height="100" width="60"/>
		</mx:VBox>
		<mx:VBox>
		<mx:HBox>
			<s:Label text="价    格"/><s:Label text="{product.name}"/>
		</mx:HBox>
		<mx:HBox>
			<s:Label text="仓储量"/><s:Label text="{product.price}"/>
		</mx:HBox>
		</mx:VBox>
	</mx:HBox>
	<mx:Spacer height="8"/>
</mx:VBox>
	<mx:VBox id="buttons" visible="false" verticalGap="4" paddingRight="8" right="19" top="12">
		<mx:Button id="purchase" icon="@Embed('/assets/icon_cart_empty.png')" 
				   click="dispatchEvent(new Event('showProductCart',true));dispatchEvent(new ProductDetailEvent(ProductDetailEvent.PURCHASE, product))" 
				   width="30" toolTip="Add to cart"/>
		<mx:Button id="compare" icon="@Embed('/assets/icon_compare.png')" 
				   click="dispatchEvent(new Event('hideProductCart',true));dispatchEvent(new ProductDetailEvent(ProductDetailEvent.COMPARE, product))" 
				   width="30" toolTip="Add to compare list"/>
		<mx:Button id="details" icon="@Embed('/assets/icon_details.png')" 
				   click="dispatchEvent(new ProductDetailEvent(ProductDetailEvent.DETAILS, product))" 
				   width="30" toolTip="Show details"/>
	</mx:VBox>

</mx:Canvas>
