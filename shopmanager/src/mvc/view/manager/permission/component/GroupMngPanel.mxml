<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" name="角色权限" horizontalScrollPolicy="off" verticalScrollPolicy="off" 
		   layout="horizontal" width="100%" height="100%" initialize="module1_initializeHandler(event)" 
		   creationComplete="module1_creationCompleteHandler(event)">
	<fx:Script source="../../../../../mvc/base/BaseImport.as"/>
	<fx:Script>
		<![CDATA[
			/**
			 * @author minn
			 * @QQ 394286006
			 * @email freemanfreelift@gmail.com
			 */
			import mvc.model.permission.vo.ActionTb;
			
			import mx.core.IUIComponent;
			import mx.events.DragEvent;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.managers.DragManager;

			[Bindable]
			private var actions:ArrayCollection=new ArrayCollection();
			[Bindable]
			private var groups:ArrayCollection=new ArrayCollection();
			protected function module1_initializeHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				MinnMessageEventManager.getInstance().addEventListener(MinnMessageEvent.MESSAGE+"GroupPanel",GroupMessageHandler);
			}
			private function GroupMessageHandler(e:MinnMessageEvent):void{
				//				var _ctype:Object=e.data.item;
				//				var op:Operator=e.data.item as Operator;
				//				Alert.show(_ctype.color);
				var mp:GroupTb=e.data.item as GroupTb;
				if(e.data.method=="add"){
					MinnUtil.reverse(groups);
					groups.addItem(mp);
					MinnUtil.reverse(groups);
				}else{
					groups.setItemAt(mp,e.data.index);
				}
				
				//				else if(_ctype.color==2)
				//					ee=new MerchandiseEvent(MerchandiseEvent.CTYPE_MERCHANDISE_MODIFY,e.data,true);
				//				this.dispatchEvent(ee);
			}
			
			protected function module1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				appFacade.startup(AppCommand.GROUP_MNG_STARTUP,this);
				if(!this.parentApplication.operator.hasRole('01')){
					if(!this.parentApplication.operator.hasAction('14')){
						add_id.enabled=false;
						modify_id.enabled=false;
						del_id.enabled=false;
					}
					
				}
				groupQuery();
			}
			protected function open_add_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
				
				var url:String="mvc/view/manager/permission/component/GroupPanel";
			
				var _mp:GroupTb=new GroupTb();
				_mp._color='1';
				_mp._sid=this.parentApplication.PRIVATEKEY;
				Entrypt.loadswfObject(url+Config.SUBFFIX,function(evt:Event):void{
					loadswfCompleteHandler(evt,"ActionPanel"+new Date()+".swf",_mp,"add");
				});
				
			}
			private function loadswfCompleteHandler(evt:Event,url:String,_vo:GroupTb,method:String,ind:int=-1):void{
				//				mm.loadModule("2011010812342.swf",Entrypt.uncompress(evt.target.data as ByteArray,KEY));
				if(Config.SUBFFIX==Config.FLAG)
					WindowProxy.getInstance().getTitleWindow(url,evt.target.data as ByteArray,{method:method,index:ind,item:_vo},this);
				else
					WindowProxy.getInstance().getTitleWindow(url,Entrypt.uncompress(evt.target.data as ByteArray,this.parentApplication.KEY),{method:method,index:ind,item:_vo},this);
			}
			
			protected function open_modify_clickHandler(event:MouseEvent):void
			{
				if(group_id.selectedItem){
					var url:String="mvc/view/manager/permission/component/GroupPanel"+Config.SUBFFIX;
					var _mp:GroupTb=group_id.selectedItem as GroupTb;
					_mp._color="2";
					Entrypt.loadswfObject(url,function(evt:Event):void{
						loadswfCompleteHandler(evt,"mvc/view/manager/permission/component/GroupPanel.swf",_mp,"modify",group_id.selectedIndex);
					});
				}else{
					Alert.show("请先选择数据!","提示");
				}
			}
			protected function del_clickHandler(event:MouseEvent):void
			{
				if(group_id.selectedItem){
					var dm:GroupTb=group_id.selectedItem as GroupTb;
					dm._sid=this.parentApplication.PRIVATEKEY;
					this.dispatchEvent(new PermissionEvent(PermissionEvent.GROUP_DEL,{index:action_id.selectedIndex,item:dm},true));
				}else
					Alert.show("请先选择一条数据!","提示");
			}
			protected function save_clickHandler(event:MouseEvent):void
			{
				
			}

			private function actionQuery():void{
				var condition:Object=new Object();
				condition._sid=this.parentApplication.PRIVATEKEY;
				condition.type=1;
				condition.incondition="\'\'";
				this.dispatchEvent(new PermissionEvent(PermissionEvent.GROUP_ACTION_QUERY,{item:condition},true));
			}
			private function groupQuery():void{
				var condition:Object=new Object();
				condition._sid=this.parentApplication.PRIVATEKEY;
				condition.type=0;
				condition.incondition="\'\'";
				this.dispatchEvent(new PermissionEvent(PermissionEvent.GROUP_QUERY,{item:condition},true));
			}
			public function invokeActionQuery(arr:ArrayCollection,recordCount:int):void{
				
				actions.removeAll();
				action_id.itemRenderer=null;
				actions.addAll(arr);
				//				Alert.show(ctypes.length+'');
			}
			public function invokeGroupQuery(arr:ArrayCollection,recordCount:int):void{
				
				groups.removeAll();
				group_id.itemRenderer=null;
				groups.addAll(arr);
				actionQuery();	
				//				Alert.show(ctypes.length+'');
			}
			public function invokeDel():void
			{
				groups.removeItemAt(groups.getItemIndex(group_id.selectedItem));
			}

			protected function role_action_dragDropHandler(event:DragEvent):void
			{
				// TODO Auto-generated method stub
//				var dragObj:Array=event.dragSource.dataForFormat("items") as Array; 
//				Alert.show(dragObj.length+'');
			}


			protected function role_action_dragEnterHandler(event:DragEvent):void
			{
				// TODO Auto-generated method stub
				var dragObj:Array=event.dragSource.dataForFormat("items") as Array;
//				Alert.show(dragObj[0].id+"");
				var _ds:ArrayCollection=role_action_id.dataProvider as ArrayCollection;
				var flag:Boolean=false;
				for(var i:int=0;i<_ds.length;i++){
					
					if(_ds.getItemAt(i).id==dragObj[0].id){
						flag=true;
						Alert.show("权限为:"+_ds.getItemAt(i).name+"的名称已存在!","提示");
						break;
					}
				}
				if(flag){
				
					event.stopImmediatePropagation();
				}
//				event.stopPropagation();
//				DragManager.acceptDragDrop(IUIComponent(event.target));
//				DragManager.
			}
			protected function save_group_action_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				//				var dragObj:Array=event.dragSource.dataForFormat("items") as Array; 
				//				Alert.show(dragObj.length+'');
				var _ds:ArrayCollection=role_action_id.dataProvider as ArrayCollection;
				var obj:Object=new Object();
				obj._sid=this.parentApplication.PRIVATEKEY;
				obj.groupid=group_id.selectedItem.id;
				obj.actions=_ds.toArray();
				this.dispatchEvent(new PermissionEvent(PermissionEvent.GROUP_ACTION_SET,{item:obj},true));
			}


			protected function group_id_itemClickHandler(event:ListEvent):void
			{
				// TODO Auto-generated method stub
				group_action_click_id.enabled=true;
//				Alert.show(group_id.selectedItem._actions);
				var arr:Array=group_id.selectedItem._actions as Array;
//				var ac:ArrayCollection=new ArrayCollection();
//				for(var i:int=0;i<arr.length;i++){
//					var gp:ActionTb=new ActionTb();
//					ac.addItem(gp);
//				}
//				MinnUtil.copyProperty(ac,arr);
				role_action_id.dataProvider=arr;
			}

			public function delAction():void{
				var ds:ArrayCollection=role_action_id.dataProvider as ArrayCollection;
				ds.removeItemAt(ds.getItemIndex(role_action_id.selectedItem));
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<mx:VBox verticalGap="0" height="100%">
		<s:Label text="角色管理"/>
		<mx:HBox width="100%">
			<s:ToggleButton label="添加" click="open_add_clickHandler(event)" id="add_id"/>
			<s:ToggleButton label="修改" click="open_modify_clickHandler(event)" id="modify_id"/>
			<s:ToggleButton label="删除" click="del_clickHandler(event)" id="del_id"/>
		</mx:HBox>
		<mx:DataGrid width="100%" height="100%" fontSize="15" id="group_id" dataProvider="{groups}" itemClick="group_id_itemClickHandler(event)">
			<mx:columns>
				<mx:DataGridColumn headerText="编号" dataField="rolenum" itemRenderer="minn.common.MinnLabel"/>
				<mx:DataGridColumn headerText="角色名称" dataField="name" itemRenderer="minn.common.MinnLabel"/>
				<mx:DataGridColumn headerText="操作" dataField="_creatorName" itemRenderer="minn.common.MinnLabel"/>
			</mx:columns>
		</mx:DataGrid>
	</mx:VBox>
	<mx:Spacer width="100%"/>
	<mx:VBox verticalGap="0" height="100%">
		<s:Label text="角色权限"/>
		<mx:HBox width="100%">
			<s:ToggleButton label="保存设置" id="group_action_click_id" enabled="false" click="save_group_action_clickHandler(event)"/>
		</mx:HBox>
		<mx:DataGrid width="100%" height="100%"  fontSize="15" dropEnabled="true" id="role_action_id" dragEnter="role_action_dragEnterHandler(event)" dragDrop="role_action_dragDropHandler(event)">
			<mx:columns>
				<mx:DataGridColumn headerText="编号" dataField="actionnum" itemRenderer="minn.common.MinnLabel"/>
				<mx:DataGridColumn headerText="权限名称" dataField="name" itemRenderer="minn.common.MinnLabel"/>
				<mx:DataGridColumn headerText="操作">
					<mx:itemRenderer>
						<fx:Component>
							<mx:Button label="删除"  click="outerDocument.delAction()"/>
						</fx:Component>
					</mx:itemRenderer>
					</mx:DataGridColumn>
			</mx:columns>
		</mx:DataGrid>
	</mx:VBox>
	
	<mx:VBox verticalGap="0" height="100%">
		<s:Label text="权限"/>
		<mx:HBox width="100%">
			
			<s:ToggleButton label="刷新" click="actionQuery()"/>
		</mx:HBox>
		<mx:DataGrid width="100%" height="100%"  fontSize="15" id="action_id" dataProvider="{actions}" dragEnabled="true" >
			<mx:columns>
				<mx:DataGridColumn headerText="编号" dataField="actionnum" itemRenderer="minn.common.MinnLabel"/>
				<mx:DataGridColumn headerText="权限名称" dataField="name" itemRenderer="minn.common.MinnLabel"/>
			</mx:columns>
		</mx:DataGrid>
	</mx:VBox>
</mx:Module>
