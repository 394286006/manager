<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   name="付款方式管理"
		   xmlns:mx="library://ns.adobe.com/flex/mx" layout="vertical" width="100%" height="100%" xmlns:common="minn.common.*" 
		   creationComplete="creationCompleteHandler(event)" initialize="module1_initializeHandler(event)" remove="module1_removeHandler(event)">
	<fx:Script source="../../../../../mvc/base/BaseImport.as"/>
	<fx:Script>
		<![CDATA[
			/**
			 * @author minn
			 * @QQ 394286006
			 * @email freemanfreelift@gmail.com
			 */
			import minn.common.Entrypt;
			
			import mvc.model.payway.vo.Payway;
			import mvc.view.manager.payway.event.PaywayEvent;
			[Bindable]
			private var payways:ArrayCollection=new ArrayCollection();
			protected function module1_initializeHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				MinnMessageEventManager.getInstance().addEventListener(MinnMessageEvent.MESSAGE+"PaywayPanel",messageHandler);
			}
			private function messageHandler(e:MinnMessageEvent):void{
				//				var _ctype:Object=e.data.item;
				//				var op:Operator=e.data.item as Operator;
				//				Alert.show(_ctype.color);
				var v:Payway=e.data.item as Payway;
				if(e.data.method=="add"){
					MinnUtil.reverse(payways);
					payways.addItem(v);
					MinnUtil.reverse(payways);
				}else{
					payways.setItemAt(v,e.data.index);
				}
				
				//				else if(_ctype.color==2)
				//					ee=new MerchandiseEvent(MerchandiseEvent.CTYPE_MERCHANDISE_MODIFY,e.data,true);
				//				this.dispatchEvent(ee);
			}
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				appFacade.startup(AppCommand.PAYWAY_MNG_STARTUP,this);
				query_clickHandler();
			}
			
			
			
			
			protected function module1_removeHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				this.removeEventListener(FlexEvent.CREATION_COMPLETE,creationCompleteHandler);
			}
			
			
			protected function add_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var _payway:Payway=new Payway();
				_payway._color='1';
				Entrypt.loadswfObject("mvc/view/manager/payway/component/PaywayPanel"+Config.SUBFFIX,function(evt:Event):void{
					loadSpTitleswfCompleteHandler(evt,"mvc/view/manager/payway/component/PaywayPanel.swf",{method:"add",index:-1,item:_payway});
				});
//				WindowProxy.getInstance().getSpTitleWindow("mvc/view/manager/payway/component/PaywayPanel.swf",{method:"add",index:-1,item:_payway});
			}
			private function loadSpTitleswfCompleteHandler(evt:Event,url:String,d:Object):void{
				//				mm.loadModule("2011010812342.swf",Entrypt.uncompress(evt.target.data as ByteArray,KEY));
				WindowProxy.getInstance().getSpTitleWindow(url,Entrypt.uncompress(evt.target.data as ByteArray,this.parentApplication.KEY),d,this);
			}
			
			protected function modify_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var _payway:Payway=payway_id.selectedItem as Payway;
				_payway._color='2';
				Entrypt.loadswfObject("mvc/view/manager/payway/component/PaywayPanel"+Config.SUBFFIX,function(evt:Event):void{
					loadSpTitleswfCompleteHandler(evt,"mvc/view/manager/payway/component/PaywayPanel.swf",{method:"modify",index:-1,item:_payway});
				});
//				WindowProxy.getInstance().getSpTitleWindow("mvc/view/manager/payway/component/PaywayPanel.swf",{method:"modify",index:-1,item:_payway});
			}
			
			
			protected function del_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(payway_id.selectedItem)
					this.dispatchEvent(new PaywayEvent(PaywayEvent.PAYWAY_DEL,{index:payway_id.selectedIndex,item:payway_id.selectedItem},true));
				else
					Alert.show("请先选择一条数据!","提示");
			}
			
			public function invokeDel():void
			{
				payways.removeItemAt(payways.getItemIndex(payway_id.selectedItem));
			}
			private function query_clickHandler(e:Event=null):void{
				
				this.dispatchEvent(new PaywayEvent(PaywayEvent.PAYWAY_QUERY,null,true));
			}
			
			/**
			 * 查询结果回调函数
			 **/ 
			public function invokeQuery(arr:ArrayCollection,recordCount:int):void{
				reco_id.text="总共有"+recordCount+"条数据";
				payways.removeAll();
				payway_id.itemRenderer=null;
				payways.addAll(arr);
				//				Alert.show(ctypes.length+'');
			}
			

		

		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<mx:states>
		<s:State name="default"/>    
		<s:State name="qry"/>
	</mx:states>
	<mx:HBox width="100%">
		<mx:Label id="reco_id"/>
		<mx:Spacer width="100%"/>
		<s:ToggleButton label="添加" click="add_clickHandler(event)"/>
		<s:ToggleButton label="修改" click="modify_clickHandler(event)"/>
		<s:ToggleButton label="删除" click="del_clickHandler(event)"/>
	</mx:HBox>
	<mx:DataGrid width="100%" height="100%" dataProvider="{payways}" id="payway_id">
		<mx:columns>
			<mx:DataGridColumn headerText="支付名称" dataField="name" itemRenderer="minn.common.MinnLabel"/>
			<mx:DataGridColumn headerText="关联账号" dataField="account" itemRenderer="minn.common.MinnLabel"/>
			<mx:DataGridColumn headerText="创建人" dataField="_creatorName" itemRenderer="minn.common.MinnLabel"/>
			<mx:DataGridColumn headerText="创建时间" dataField="createDate" itemRenderer="minn.common.MinnLabel"/>
			<mx:DataGridColumn headerText="支付描述" dataField="descript" itemRenderer="minn.common.MinnLabel"/>
		</mx:columns>
	</mx:DataGrid>
</mx:Module>
